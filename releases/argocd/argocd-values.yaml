server:
  metrics:
    serviceMonitor:
      enabled: true
      labels:
        release: kube-prometheus-stack
      selector: 
        release: kube-prometheus-stack
  service:
    type: ClusterIP
    servicePortHttp: 8080
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 125m
      memory: 128Mi
configs:
  cm:
    resource.customizations.ignoreDifferences.admissionregistration.k8s.io_MutatingWebhookConfiguration: |
      jqPathExpressions:
      - '.webhooks[]?.clientConfig.caBundle'
    application.instanceLabelKey: argocd.argoproj.io/instance
    url: https://argocd.horel.io
    oidc.config: |
      name: Auth0
      issuer: https://dex.horel.io
      clientID: argocd
      clientSecret: $argocd-oauth-secret:oidc.auth0.clientSecret
      requestedScopes:
      - openid
      - profile
      - email
      rootCA |
        -----BEGIN CERTIFICATE-----
        MIIDLDCCAhSgAwIBAgIUPKHRImWGocfKQnPlwDcGE9+vR6MwDQYJKoZIhvcNAQEL
        BQAwEzERMA8GA1UEAxMIaG9yZWwuaW8wHhcNMjQwNTAzMDIyNTAwWhcNMzQwNTAx
        MDIyNTI3WjATMREwDwYDVQQDEwhob3JlbC5pbzCCASIwDQYJKoZIhvcNAQEBBQAD
        ggEPADCCAQoCggEBAL+Xw43mjw9pKIX8Hw+KFBhFm+prMuKNGPVmDmlLLmty3ZU/
        bKU7ET0a6ZRRlRG8PcUJ9Ogy/4bPCGK4Abr3T0VeqDd20coHJDLDyUvAHAFlGe4Z
        6kiapV7GedOvO2p5SPxS6L2x+tCWZpnaG74oNKCI03KmPygRHJ332czDBtNS/Tpr
        +oDN8e1gLWkYualLFGOqWZm+cZ/We39oXCResHv7Ls+jJFBLgo9v+W0slHnU+RUa
        Yn7Oa2a9HBuNrAwXEUh6gbCiABrxpS823D+qyZxylIHTPWxhY7hrUTDqQ4XjL6Tq
        +UJD5xM27aki5JZXDCmO3EtV36DirNJlOQFL3wcCAwEAAaN4MHYwDgYDVR0PAQH/
        BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFKO1N8GgmE0Seaxc97DW
        Br8f/E1kMB8GA1UdIwQYMBaAFKO1N8GgmE0Seaxc97DWBr8f/E1kMBMGA1UdEQQM
        MAqCCGhvcmVsLmlvMA0GCSqGSIb3DQEBCwUAA4IBAQBGolwVvb3B1wadO5ejkiN/
        lNnJM1pObSMidvFi+Vnml2XlB6UVFC7zIibm7DKC3ohWOGXAtzliFHHpO6N/Frwg
        dM5gHS57QizzWgoGo8KJKzIQAjbhlhY92rOdqK4BBVsBsEob/naEySJXyKKYZoDd
        KTYApbOESbmD1v1sU+PWxK1lzajyOn/CcJTSAhfliPZkGSYW+6ILe/9lb8ju6kIp
        0CEXUzZ2XmSQ2h/Yy/aOFcpfCQ1KvMjDAER+exvzh1AeizKWmfUcnmDnv5cYhuKp
        V8oYmWT5VzHtYFO0RpyLuqmGkZpdw8HzWqqkzHdhxg2bhmLT9aQyW4yp6X1OdsE9
        -----END CERTIFICATE-----
  params:
    server.insecure: true
applicationSet:
  resources:
    limits:
      cpu: '300m'
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi
  metrics:
    serviceMonitor:
      enabled: true
      labels:
        release: kube-prometheus-stack
      selector: 
        release: kube-prometheus-stack
repoServer:
  resources:
    limits:
      cpu: '800m'
      memory: 300Mi
    requests:
      cpu: 100m
      memory: 100Mi
  tolerations: 
  - effect: "NoSchedule"
    key:  "node-role.kubernetes.io/master" 
    operator: "Exists"
  metrics:
    serviceMonitor:
      enabled: true
      labels:
        release: kube-prometheus-stack
      selector: 
        release: kube-prometheus-stack
dex:
  enabled: false
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  metrics:
    serviceMonitor:
      enabled: true
      labels:
        release: kube-prometheus-stack
      selector: 
        release: kube-prometheus-stack
redis:
  resources:
    limits:
      cpu: 200m
      memory: 64Mi
    requests:
      cpu: 100m
      memory: 32Mi
  metrics:
    serviceMonitor:
      enabled: true
      labels:
        release: kube-prometheus-stack
      selector: 
        release: kube-prometheus-stack
controller:
  resources:
    limits:
      cpu: '500m'
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 150Mi
  metrics:
    serviceMonitor:
      enabled: true
      labels:
        release: kube-prometheus-stack
      selector: 
        release: kube-prometheus-stack
notifications:
  resources:
    limits:
      cpu: 200m
      memory: 64Mi
    requests:
      cpu: 100m
      memory: 32Mi
  metrics:
    serviceMonitor:
      enabled: true
      labels:
        release: kube-prometheus-stack
      selector: 
        release: kube-prometheus-stack